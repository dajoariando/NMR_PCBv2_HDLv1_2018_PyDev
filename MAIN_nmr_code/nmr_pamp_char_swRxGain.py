'''
Created on May 04, 2020

This module was created to characterize distortion generated by the RX Opamp with different gain settings.
The distortion added more noise and makes the system unreliable. It seems like the distortion depends on the
LPF/HPF values set by RC constant in the gain path.

@author: David Ariando
'''

import os
import shutil
import time
from datetime import datetime

from nmr_std_function.nmr_functions import compute_iterate
from nmr_std_function.nmr_functions import compute_wobble
from nmr_std_function.nmr_functions import compute_gain
from nmr_std_function.data_parser import parse_simple_info
from nmr_std_function.nmr_class import tunable_nmr_system_2018

import numpy as np

# variables
data_parent_folder = "/root/NMR_DATA"
en_remote_dbg = 0
fig_num = 1
en_fig = 1

# measurement properties
sta_freq = 1
sto_freq = 12.5
spac_freq = 0.01
samp_freq = 25

# instantiate nmr object
nmrObj = tunable_nmr_system_2018( data_parent_folder, en_remote_dbg )

# sweep parameter
RxGainSet = np.zeros( 10, dtype = int )
RxGainVal = [
    [1, 1, 1],
    [4, 1, 1],
    [1, 4, 1],
    [1, 1, 4],
    [4, 4, 1],
    [4, 1, 4],
    [1, 4, 4],
    [10, 1, 1],
    [1, 10, 1],
    [1, 1, 10]
    ]  # these values should correspond the setting below

RxGainSet[0] = nmrObj.RX1_1L_msk | nmrObj.RX2_L_msk | nmrObj.RX_FL_msk

RxGainSet[1] = nmrObj.RX1_1H_msk | nmrObj.RX2_L_msk | nmrObj.RX_FL_msk;
RxGainSet[2] = nmrObj.RX1_1L_msk | nmrObj.RX2_H_msk | nmrObj.RX_FL_msk;
RxGainSet[3] = nmrObj.RX1_1L_msk | nmrObj.RX2_L_msk | nmrObj.RX_FH_msk;

RxGainSet[4] = nmrObj.RX1_1H_msk | nmrObj.RX2_H_msk | nmrObj.RX_FL_msk;
RxGainSet[5] = nmrObj.RX1_1H_msk | nmrObj.RX2_L_msk | nmrObj.RX_FH_msk;
RxGainSet[6] = nmrObj.RX1_1L_msk | nmrObj.RX2_H_msk | nmrObj.RX_FH_msk;

RxGainSet[7] = nmrObj.RX1_1L_msk | nmrObj.RX1_1H_msk | nmrObj.RX2_L_msk | nmrObj.RX_FL_msk;
RxGainSet[8] = nmrObj.RX1_1L_msk | nmrObj.RX2_L_msk | nmrObj.RX2_H_msk | nmrObj.RX_FL_msk;
RxGainSet[9] = nmrObj.RX1_1L_msk | nmrObj.RX2_L_msk | nmrObj.RX_FL_msk | nmrObj.RX_FH_msk;

work_dir = os.getcwd()
os.chdir( data_parent_folder )

# create name for new folder
now = datetime.now()
datename = now.strftime( "%Y_%m_%d_%H_%M_%S" )
swfolder = data_parent_folder + '/' + datename + '_RXGainSw'

# system setup
nmrObj.initNmrSystem()  # necessary to set the GPIO initial setting

nmrObj.deassertAll()

nmrObj.assertControlSignal( nmrObj.PSU_5V_TX_N_EN_msk |
                           nmrObj.PSU_5V_ADC_EN_msk | nmrObj.PSU_5V_ANA_P_EN_msk |
                           nmrObj.PSU_5V_ANA_N_EN_msk )

nmrObj.setPreampTuning( -2.7, 0.3 )  # try -2.7, -1.8 if fail
nmrObj.setMatchingNetwork( 0, 0 )
nmrObj.setMatchingNetwork( 0, 0 )

for i in np.arange ( len( RxGainSet ) ) :
    nmrObj.assertControlSignal( RxGainSet[i] | nmrObj.RX_SEL1_msk )
    nmrObj.assertControlSignal( nmrObj.PSU_15V_TX_P_EN_msk | nmrObj.PSU_15V_TX_N_EN_msk | nmrObj.PSU_5V_TX_N_EN_msk |
                               nmrObj.PSU_5V_ADC_EN_msk | nmrObj.PSU_5V_ANA_P_EN_msk |
                               nmrObj.PSU_5V_ANA_N_EN_msk )
    time.sleep( 0.1 )

    nmrObj.pamp_char ( sta_freq, sto_freq, spac_freq, samp_freq )

    nmrObj.deassertAll()

    meas_folder = parse_simple_info( data_parent_folder, 'current_folder.txt' )

    maxS21, maxS21_freq , _ = compute_gain( nmrObj, data_parent_folder, meas_folder[0], en_fig, fig_num )
    print( 'maxS21={0:0.2f} maxS21_freq={1:0.2f}'.format( 
         maxS21, maxS21_freq ) )

    swfolder_ind = swfolder + '/' + str( '{:02d}-{:02d}-{:02d}'.format( RxGainVal[i][0], RxGainVal[i][1], RxGainVal[i][2] ) )
    shutil.move ( data_parent_folder + '/' + meas_folder[0], swfolder_ind )  # move the data folder
    shutil.move( swfolder_ind + '/gain.png', swfolder + '/' + str( '{:02d}--{:02d}-{:02d}-{:02d}.png'.format( i, RxGainVal[i][0], RxGainVal[i][1], RxGainVal[i][2] ) ) )  # move the figure
